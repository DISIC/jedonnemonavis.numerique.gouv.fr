datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum RequestMode {
  whitelist
  superuser
}

enum RightAccessStatus {
  carrier
  removed
}

// Next auth
model User {
  id                    String                @id @default(auto()) @map("_id") @db.ObjectId
  firstName             String?
  lastName              String?
  active                Boolean               @default(false)
  observatoire_account  Boolean               @default(false)
  observatoire_username String?
  email                 String                @unique
  password              String
  UserOTPs              UserOTP[]
  UserValidationTokens  UserValidationToken[]
  UserRequests          UserRequest[]
  UserProducts          UserProduct[]
}

model UserRequest {
  id      String      @id @default(auto()) @map("_id") @db.ObjectId
  user    User        @relation(fields: [user_id], references: [id])
  user_id String      @db.ObjectId
  reason  String
  mode    RequestMode
}

model UserOTP {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  user            User     @relation(fields: [user_id], references: [id])
  user_id         String   @db.ObjectId
  code            String   @unique
  expiration_date DateTime
}

model UserValidationToken {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  user    User   @relation(fields: [user_id], references: [id])
  user_id String @db.ObjectId
  token   String @unique
}

model UserInviteToken {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  user_email String
  token   String @unique
}

model Entity {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String    @unique
  products Product[]
}

model Button {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String   @unique
  description String?
  isTest      Boolean? @default(false)
  product     Product? @relation(fields: [product_id], references: [id])
  product_id  String   @db.ObjectId
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Product {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  title           String        @unique
  entity          Entity?       @relation(fields: [entity_id], references: [id])
  entity_id       String        @db.ObjectId
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt
  isEssential     Boolean?      @default(false)
  urls            String[]
  volume          Int?
  observatoire_id Int?
  buttons         Button[]
  users           UserProduct[]
}

model UserProduct {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  user       User?   @relation(fields: [user_email], references: [email])
  user_email String
  product    Product @relation(fields: [product_id], references: [id])
  product_id String  @db.ObjectId

  status RightAccessStatus @default(carrier)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model WhiteListedDomain {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  domain String @unique
}
