name: Run Cypress Tests

on:
  pull_request:
    branches:
      - feat/clevercloud
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: jdma
        ports:
          - 5432:5432
      mailhog:
        image: mailhog/mailhog
        ports:
          - 8025:8025
          - 1025:1025

    steps:
      # Steps 1-7 restent inchangés...

      # 8. Attendre que les services soient prêts
      - name: Wait for services to be ready
        run: |
          echo "Waiting for webapp-backoffice to be ready..."
          until curl -s http://localhost:3000 > /dev/null; do echo "Waiting for webapp-backoffice..."; sleep 5; done

          echo "Waiting for webapp-form to be ready..."
          until curl -s http://localhost:3001 > /dev/null; do echo "Waiting for webapp-form..."; sleep 5; done

          echo "Waiting for MailHog to be ready..."
          until curl -s http://localhost:8025 > /dev/null; do echo "Waiting for MailHog..."; sleep 5; done

      # 9. Vérifier la configuration réseau
      - name: Check network configuration
        run: |
          echo "Checking network configuration..."
          ip addr show
          netstat -tuln
          ping -c 4 localhost
          nc -zv localhost 1025 || echo "Failed to connect to MailHog SMTP port"
          nc -zv localhost 8025 || echo "Failed to connect to MailHog HTTP port"

      # 10. Vérifier la configuration Nodemailer
      - name: Check Nodemailer configuration
        run: |
          cd webapp-backoffice
          node -e "
          const nodemailer = require('nodemailer');
          const transporter = nodemailer.createTransport({
            host: 'localhost',
            port: 1025,
          });
          transporter.verify(function(error, success) {
            if (error) {
              console.log('Nodemailer configuration error:', error);
              process.exit(1);
            } else {
              console.log('Nodemailer is configured correctly');
            }
          });"

      # 11. Exécuter les tests Cypress pour `webapp-backoffice`
      - name: Run Cypress tests for webapp-backoffice
        working-directory: ./webapp-backoffice
        run: npx cypress run --spec "cypress/e2e/jdma/launcher.cy.js" --headed --browser chrome

      # 12. Vérifier si MailHog reçoit les emails
      - name: Check MailHog for received emails
        run: |
          echo "Checking MailHog for received emails..."
          curl -s http://localhost:8025/api/v2/messages | jq .
          echo "MailHog logs:"
          docker logs $(docker ps -q --filter name=mailhog)

      # 13. Arrêter les applications démarrées
      - name: Stop applications
        run: |
          pkill -f "yarn start" || true
          pkill -f "yarn startB" || true
